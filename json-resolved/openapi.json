openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Employee API'
  description: '**View and Add Employee Details**'
  contact:
    name: ADP Marketplace API support
    email: adpapisupport@adp.com
    url: http://__/

servers:
  - description: Production Url
    url: http://_host_/
  - description: Test Url
    url: http://_host2_/
components:
  schemas:
    employee:
      type: object
      properties: 
        ID:
          type: number
          minimum: 1001
          default: 1001
        Name:
          type: string
        City:
          type: string
        DoB:
          type: string
          format: date
paths:
  /employee/{employeeid}:
    get:
      tags: 
        - Get Employee Data
      description: Get Employee details of an Employee
      summary: This returns Employee details based on EmployeeID
      parameters: 
        - name: employeeid
          in: path
          required: true
          description: ID of the Employee
          schema: 
            type: integer
            default: 1001
            example: 2001

      responses:
        '200':
          description: Successfull Response
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/employee'
        '400':
          description: Bad Request
          headers:
            Content-Type: 
              description: Content-Type of the response
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example: {'error': 'bad request', 'error_code': '1000'}

        '404':
          description: Not found
          headers:
            Content-Type: 
              description: Content-Type of the response
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example: {'error': 'Not Found', 'error_code': '1002'}
  
  /employee:
    get:
      tags: 
        - Get All Employees
      description: Get Employee details of all Employees
      summary: This returns all Employees details 
      parameters: 
        - name: employeeid
          in: path
          required: true
          description: ID of the Employee
          schema: 
            type: integer
            default: 1001
            example: 2001
        - name: $filter
          in: query
          required: false
          description: "To Apply any filters on the data\n* $filter=/City eq HYD\n* $filter=/Name eq Smith" 
          schema: 
            type: integer
            default: 1001
            example: 2001
            
      responses:
        '200':
          description: Successfull Response
          content:
            application/json: 
              schema: 
                $ref: '#/components/schemas/employee'
        '400':
          description: Bad Request
          headers:
            Content-Type: 
              description: Content-Type of the response
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example: {'error': 'bad request', 'error_code': '1000'}

        '404':
          description: Not found
          headers:
            Content-Type: 
              description: Content-Type of the response
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                example: {'error': 'Not Found', 'error_code': '1002'}
  /employee/post:  
    post:
      tags: 
        - Add Employee Data
      description: Adds Employee Data to the Database
      summary: Add a new Employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
          application/xml:
            schema:
              $ref: '#/components/schemas/employee'
          text/plain:
            schema:
              type: string    
      
      responses:
        '201':
          description: Employee Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorised
